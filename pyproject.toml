[tool.poetry]
name = "tdd_chat_app"
version = "0.1.0"
description = "Sample DDD Template for Python"
authors = ["Bibek Joshi"]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.12"


[tool.poetry.group.development.dependencies]



[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
coverage = "^7.4.1"
pytest-mock = "^3.12.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



########### RUFF CONFIGURATION ############################

[tool.ruff]
# Exclude a variety of commonly ignored directories.
include = ["pyproject.toml", "tdd_chat_app/**/*.py", "tests/**/*.py"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".poetry_cache",
    ".virtualenvs"
]
# Same as Black.
line-length = 79
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
#docstring-code-format = true
# This only has an effect when the `docstring-code-format` setting is
# enabled.
#docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.pyright]
include = ["tdd_chat_app"]
exclude = [
  "**/__pycache__",
  "**.virtualenvs",
  "**.poetry_cache"
]
ignore = []
typeCheckingMode = "strict"
pythonVersion = "3.12"

deprecateTypingAliases = true

reportMissingImports = true
reportPropertyTypeMismatch = true
reportUnusedImport = true
reportUnusedVariable = true
reportDuplicateImport = true
reportWildcardImportFromLibrary = true
reportInconsistentConstructor = true
reportOverlappingOverload = true
# reportMissingSuperCall = true
reportUninitializedInstanceVariable = true
reportUnknownParameterType = true
reportUnknownArgumentType = true
reportUnknownVariableType = true
reportUnknownMemberType= true
reportMissingTypeArgument=true # Generic
reportCallInDefaultInitializer=true
reportUnnecessaryIsInstance=false
reportImplicitStringConcatenation=true
reportUnusedCallResult=true

########### MyPY Configuration ############################

# [tool.mypy]
# plugins = [
#   "pydantic.mypy"
# ]
# python_version = "3.12"
# warn_return_any = true
# warn_unused_configs = true
# exclude = [
#     "/tests/",
#     ".poetry_cache",
#     ".virtualenvs"
# #    '^file1\.py$',  # TOML literal string (single-quotes, no escaping necessary)
# #    "^file2\\.py$",  # TOML basic string (double-quotes, backslash and other characters need escaping)
# ]

# disallow_untyped_decorators = true
# disallow_untyped_defs = true
# disallow_incomplete_defs = true
# check_untyped_defs = true

# warn_incomplete_stub = true
# warn_redundant_casts = true
# warn_unreachable = true

# allow_untyped_globals = false
# strict_equality = true
# extra_checks = true


# sqlite_cache = true

# # mypy per-module options:

# #[[tool.mypy.overrides]]

# [tool.pydantic-mypy]
# init_forbid_extra = true
# init_typed = true
# warn_required_dynamic_aliases = true

# ######################### Coverage Configuration #######################

[tool.coverage.run]
branch = true
parallel = true
source = [
    "tdd_chat_app/",
    ]
[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = false

[tool.coverage.html]
directory = "./reports/coverage_report"

[tool.coverage.paths]
